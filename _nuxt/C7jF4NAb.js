import{a0 as x,r as o,j as z,k as D,l as n,ae as v}from"./B4E7ZWnt.js";const L=x("products",()=>{const u=o([]),i=o(null),l=o(!1),c=o(null),f=o(0),m=o(1),d=o(1),g=o(10),r=o(!0),S=t=>z(()=>u.value.find(e=>e.id===t)),k=async(t={})=>{try{l.value=!0,c.value=null;let e;if(r.value?e=await n.getProductService().search({...t,page:t.page||d.value,limit:t.limit||g.value}):e=await v.search({...t,page:t.page||d.value,limit:t.limit||g.value}),u.value=e.data,"meta"in e&&e.meta&&typeof e.meta=="object"){const a=e.meta;f.value=a.total,m.value=a.last_page,d.value=a.current_page,g.value=a.per_page}return e}catch(e){throw c.value=e.message||"Failed to fetch products",e}finally{l.value=!1}},p=async t=>{try{l.value=!0,c.value=null;const e=await v.getById(t);return i.value=e,e}catch(e){throw c.value=e.message||"Failed to fetch product",e}finally{l.value=!1}},w=async t=>{try{l.value=!0,c.value=null;let e;return r.value?e=await n.getProductService().create(t):e=await v.create(t),u.value.unshift(e),e}catch(e){throw c.value=e.message||"Failed to create product",e}finally{l.value=!1}},P=async(t,e)=>{var a;try{l.value=!0,c.value=null;let s;r.value?s=await n.getProductService().update(t,e):s=await v.update(t,e);const y=u.value.findIndex(h=>h.id===t);return y!==-1&&(u.value[y]={...u.value[y],...s}),((a=i.value)==null?void 0:a.id)===t&&(i.value={...i.value,...s}),s}catch(s){throw c.value=s.message||"Failed to update product",s}finally{l.value=!1}},F=async t=>{var e;try{l.value=!0,c.value=null,r.value?await n.getProductService().delete(t):await v.delete(t),u.value=u.value.filter(a=>a.id!==t),((e=i.value)==null?void 0:e.id)===t&&(i.value=null)}catch(a){throw c.value=a.message||"Failed to delete product",a}finally{l.value=!1}},B=async t=>{try{l.value=!0,c.value=null;let e;return r.value?e=await n.getProductService().search({search:t.query,limit:t.limit||10,includeStock:t.includeStock}):e=await v.search({search:t.query,limit:t.limit||10,includeStock:t.includeStock}),e.data}catch(e){throw c.value=e.message||"Failed to search products",e}finally{l.value=!1}},M=async t=>{try{l.value=!0,c.value=null;let e;if(r.value)e=await n.getProductService().getByBarcode(t);else{const a=await v.search({barcode:t,limit:1});e=a.data.length>0?a.data[0]:null}return e}catch(e){throw c.value=e.message||"Failed to find product by barcode",e}finally{l.value=!1}},I=t=>{r.value=t},_=()=>{r.value=!r.value},b=async()=>{try{l.value=!0,c.value=null,r.value=!0;const e=await n.getProductService().search({limit:100});if(u.value=e.data,"meta"in e&&e.meta&&typeof e.meta=="object"){const a=e.meta;f.value=a.total,m.value=a.last_page}return console.log("âœ… Mock product data initialized:",u.value.length,"products"),e}catch(t){throw c.value=t.message||"Failed to initialize mock data",t}finally{l.value=!1}},j=()=>{u.value=[],i.value=null,c.value=null,l.value=!1,f.value=0,m.value=1,d.value=1};return{products:u,currentProduct:i,isLoading:l,error:c,totalItems:f,totalPages:m,currentPage:d,itemsPerPage:g,useMockData:D(r),getProductById:S,fetchProducts:k,fetchProductById:p,createProduct:w,updateProduct:P,deleteProduct:F,searchProducts:B,getProductByBarcode:M,setMockDataMode:I,toggleMockData:_,initializeMockData:b,$reset:j}});export{L as u};
